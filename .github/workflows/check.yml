name: 🚀 Check the application

on:
    pull_request:
        branches:
            - main

        paths-ignore:
            - '.github/**'
            - 'scripts/**'

jobs:
    check:
        name: 🎉 Check the App
        runs-on: ubuntu-latest
        steps:
            - name: 🚚 Get latest code from the application repository
              uses: actions/checkout@v3

            - name: 👷 Setup PHP & Composer
              uses: shivammathur/setup-php@v2
              with:
                  tools: composer
                  php-version: 7.4

            - name: 🚚 Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: 🚀 Cache composer dependencies
              uses: actions/cache@v3
              with:
                  restore-keys: ${{ runner.os }}-composer
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

            - name: 🤖 Install composer dependencies
              run: composer install --no-interaction

            - name: 👷 Setup the Node.JS runtime
              uses: actions/setup-node@v3
              with:
                  cache: 'npm'
                  node-version: 18

            - name: 🤖 Install the Node.JS dependencies
              run: npm ci

            - name: 🛠️ Build the Application
              run: npm run build

            - name: 🚀 Cache the application dependencies
              uses: actions/cache@v3
              with:
                  path: cache/
                  restore-keys: ${{ runner.os }}-application
                  key: ${{ runner.os }}-application-${{ hashFiles('**/package-lock.json') }}

    notificaton:
        name: 🔔 Notify the Administrator
        if: !cancelled()
        needs: [check]
        runs-on: ubuntu-latest
        steps:
            - name: Send a notificaton to the project administrator
              uses: appleboy/telegram-action@master
              with:
                  to: ${{ secrets.TELEGRAM_TO }}
                  token: ${{ secrets.TELEGRAM_TOKEN }}
                  message: 'The project ${{ secrets.PROJECT_NAME }} check status is -> ${{ needs.check.result }}'
